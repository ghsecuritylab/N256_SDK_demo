/* Copyright Statement:
*
* (C) 2005-2017  MediaTek Inc. All rights reserved.
*
* This software/firmware and related documentation ("MediaTek Software") are
* protected under relevant copyright laws. The information contained herein
* is confidential and proprietary to MediaTek Inc. ("MediaTek") and/or its licensors.
* Without the prior written permission of MediaTek and/or its licensors,
* any reproduction, modification, use or disclosure of MediaTek Software,
* and information contained herein, in whole or in part, shall be strictly prohibited.
* You may only use, reproduce, modify, or distribute (as applicable) MediaTek Software
* if you have agreed to and been bound by the applicable license agreement with
* MediaTek ("License Agreement") and been granted explicit permission to do so within
* the License Agreement ("Permitted User").  If you are not a Permitted User,
* please cease any access or use of MediaTek Software immediately.
* BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
* THAT MEDIATEK SOFTWARE RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES
* ARE PROVIDED TO RECEIVER ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
* WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
* NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
* SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
* SUPPLIED WITH MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
* THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
* THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
* CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
* SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
* STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
* CUMULATIVE LIABILITY WITH RESPECT TO MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
* AT MEDIATEK'S OPTION, TO REVISE OR REPLACE MEDIATEK SOFTWARE AT ISSUE,
* OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
* MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
*/
/*
 **************************************************************************
 * File Description
 * ----------------
 *
 * RVCDATA.H
 * This header file exports the context data for the crman.  It is only
 * included by vgdata.h
 **************************************************************************/

#ifndef RVCRDATA_H
#define RVCRDATA_H

/***************************************************************************
 * Nested Include Files
 **************************************************************************/

#include <system.h>
#include <ki_sigbuf.h>
#include <rvsystem.h>

/***************************************************************************
 * Manifest Constants
 **************************************************************************/

#define VG_CR_SYMBOL_LENGTH_UCS2        (4)
#define VG_CR_SYMBOL_LENGTH_HEX         (2)

#define VG_CR_CH_SET_CONV_BUFFER_LEN  (1536)
#define VG_CR_CH_SET_OUTPUT_BUFFER_LEN  (4096)
#define VG_CR_CH_SET_ALPHA_BUFFER_LEN   (SIM_ALPHA_ID_SIZE * VG_CR_SYMBOL_LENGTH_UCS2)
#define VG_CR_CH_SET_ALPHA_SEARCH_LEN   (SIM_ALPHA_ID_SIZE * VG_CR_SYMBOL_LENGTH_UCS2)

#ifdef ENABLE_AP_BRIDGE_FEATURE
#ifndef AP_BRIDGE_MAX_AT_CMD_COUNT
#define AP_BRIDGE_MAX_AT_CMD_COUNT 500
#endif/*AP_BRIDGE_MAX_AT_CMD_COUNT*/
#endif/*ENABLE_AP_BRIDGE_FEATURE*/

/***************************************************************************
 * Type Definitions
 **************************************************************************/


typedef enum ResultCodeTag
{
  /* Result Codes */

  START_OF_RESULT_CODES,
  RESULT_CODE_OK,
  RESULT_CODE_CONNECT,
  RESULT_CODE_RING,
  RESULT_CODE_NO_CARRIER,
  RESULT_CODE_ERROR,
  RESULT_CODE_INV,
  RESULT_CODE_NO_DIALTONE,
  RESULT_CODE_BUSY,
  RESULT_CODE_NO_ANSWER,
  RESULT_CODE_PROCEEDING,
  RESULT_CODE_FCERROR,
  RESULT_CODE_INTERMEDIATE,
  RESULT_CODE_NULL,
  END_OF_RESULT_CODES,

  /* (CME) error codes */

  START_OF_CME_ERROR_CODES,

  /* specification - general errors */

  VG_CME_PHONE_FAILURE,
  VG_CME_NO_MS_CONNECTION,
  VG_CME_PHONE_LINK_RESERVED,
  VG_CME_OPERATION_NOT_ALLOWED,
  VG_CME_OPERATION_NOT_SUPPORTED,
  VG_CME_PH_SIM_PIN_REQUIRED,
  VG_CME_FSIM_PIN_REQUIRED,
  VG_CME_FSIM_PUK_REQUIRED,
  VG_CME_SIM_NOT_INSERTED,
  VG_CME_SIM_PIN_REQUIRED,
  VG_CME_SIM_PUK_REQUIRED,
  VG_CME_SIM_FAILURE,
  VG_CME_SIM_BUSY,
  VG_CME_SIM_WRONG,
  VG_CME_INCORRECT_PASSWORD,
  VG_CME_SIM_PIN2_REQUIRED,
  VG_CME_SIM_PUK2_REQUIRED,
  VG_CME_MEMORY_FULL,
  VG_CME_INVALID_INDEX,
  VG_CME_NOT_FOUND,
  VG_CME_MEMORY_FAILURE,
  VG_CME_LONG_TEXT,
  VG_CME_INVALID_TEXT_CHARS,
  VG_CME_LONG_DIALSTRING,
  VG_CME_INVALID_DIALSTRING_CHARS,
  VG_CME_NO_NETWORK_SERVICE,
  VG_CME_NETWORK_TIMEOUT,
  VG_CME_EMERGENCY_ONLY,
  VG_CME_NET_PIN_REQUIRED,
  VG_CME_NET_PUK_REQUIRED,
  VG_CME_NETSUB_PIN_REQUIRED,
  VG_CME_NETSUB_PUK_REQUIRED,
  VG_CME_NETPROV_PIN_REQUIRED,
  VG_CME_NETPROV_PUK_REQUIRED,
  VG_CME_CORPORATE_PIN_REQUIRED,
  VG_CME_CORPORATE_PUK_REQUIRED,
  VG_CME_HIDDEN_KEY_REQUIRED,
  VG_CME_CPBW_CANNOT_UPDATE_GROUP,
  VG_CME_CPBW_CANNOT_UPDATE_ANR,
  VG_CME_CPBW_CANNOT_UPDATE_SNE,
  VG_CME_CPBW_CANNOT_UPDATE_EMAIL,
  VG_CME_CPBW_NO_FREE_EMAIL_NUMBER,
  VG_CME_CPBW_NO_FREE_EXT_RECORD,
  VG_CME_CPBW_NO_FREE_CCP_RECORD,
  VG_CME_CPBW_NO_FREE_CCP_EXT_RECORD,
  VG_CME_CPBW_NO_FREE_RECORD,
  VG_CME_CPBR_CANNOT_READ_GROUP,
  VG_CME_CPBR_CANNOT_READ_ANR,
  VG_CME_CPBR_CANNOT_READ_SNE,
  VG_CME_CPBR_CANNOT_READ_EMAIL,
  VG_CME_MECC_NO_VALID_ECC_CODE,
  VG_CME_MGID_NO_VALID_GID,
  VG_CME_UNKNOWN,

  /* specification - PSD errors */

  VG_CME_ILLEGAL_MS,
  VG_CME_ILLEGAL_ME,
  VG_CME_PSD_SERVICES_NOT_ALLOWED,
  VG_CME_PLMN_NOT_ALLOWED,
  VG_CME_LOCATION_AREA_NOT_ALLOWED,
  VG_CME_ROAMING_NOT_ALLOWED,
  VG_CME_SERVICE_OPTION_NOT_SUPPORTED,
  VG_CME_SERVICE_OPTION_NOT_SUBSCRIBED,
  VG_CME_SERVICE_OPTION_OUT_OF_ORDER,
  VG_CME_UNSPECIFIED_PSD_ERROR,
  VG_CME_PDP_AUTHENTIFICATION_ERROR,
  VG_CME_INVALID_MOBILE_CLASS,

  /* proprietary - PSD errors */
  VG_CME_ACTIV_REJ_BY_GGSN,
  VG_CME_ACTIV_REJ_UNSPECIFIED,
  VG_CME_BAD_CODE_OR_PROTOCOL_REJ,
  VG_CME_CANT_MODIFY_ADDRESS,
  VG_CME_CHAP_CLOSE,
  VG_CME_CID_ALREADY_ACTIVE,
  VG_CME_CID_NOT_AVAILABLE,
  VG_CME_COMBINED_SERVICES_NOT_ALLOWED,
  VG_CME_CONDITIONAL_IE_ERROR,
  VG_CME_DUPLICATE_TI_RECEIVED,
  VG_CME_FEATURE_NOT_SUPPORTED,
  VG_CME_PSD_SERVICE_NOT_AVAILABLE,
  VG_CME_IE_NONEXIST_OR_NOT_IMP,
  VG_CME_IMPLICITLY_DETACHED,
  VG_CME_INSUFFIC_RESOURCES,
  VG_CME_INVALID_ACTIVATION_STATE,
  VG_CME_INVALID_ADDRESS_LENGTH,
  VG_CME_INVALID_CHAR_IN_ADDRESS_STRING,
  VG_CME_INVALID_CID_VALUE,
  VG_CME_INVALID_DIALSTRING_LENGTH,
  VG_CME_INVALID_EREP_MODE,
  VG_CME_INVALID_MAND_INFORMATION,
  VG_CME_INVALID_SMS_SERVICE_PREF,
  VG_CME_INVALID_TI_VALUE,
  VG_CME_IPCP_NEGOTIATION_TIMEOUT,
  VG_CME_LCP_REQ_NEGOTIATION_TIMEOUT,
  VG_CME_LCP_TERM_NEGOTIATION_TIMEOUT,
  VG_CME_LLC_ERROR,
  VG_CME_LLC_OR_SNDCP_FAILURE,
  VG_CME_LOWER_LAYER_FAILURE,
  VG_CME_MISSING_OR_UNKNOWN_APN,
  VG_CME_MOBILE_NOT_READY,
  VG_CME_MS_ID_NOT_IN_NETWORK,
  VG_CME_MSC_TEMP_NOT_REACHABLE,
  VG_CME_MSG_INCOMPAT_WITH_STATE,
  VG_CME_MSG_TYPE_INCOMPAT_WITH_STATE,
  VG_CME_MSG_TYPE_NONEXIST_OR_NOT_IMP,
  VG_CME_NCP_CLOSE,
  VG_CME_NETWORK_FAILURE,
  VG_CME_REACTIVATION_REQUESTED,
  VG_CME_NO_ECHO_REPLY,
  VG_CME_NO_FREE_NSAPIS,
  VG_CME_NO_FURTHER_CIDS_SUPPORTED,
  VG_CME_NO_PDP_CONTEXT_ACTIVATED,
  VG_CME_NORMAL_TERMINATION,
  VG_CME_NSAPI_ALREADY_USED,
  VG_CME_OOR_ADDRESS_ELEMENT,
  VG_CME_PAP_CLOSE,
  VG_CME_PDP_CONTEXT_WITHOUT_TFT_ALREADY_ACTIVATED,
  VG_CME_PDP_TYPE_NOT_SUPPORTED,
  VG_CME_PEER_REFUSES_OUR_ACCM,
  VG_CME_PEER_REFUSES_OUR_IP_ADDR,
  VG_CME_PEER_REFUSES_OUR_MRU,
  VG_CME_PEER_REREQUESTED_CHAP,
  VG_CME_PROFILE_NOT_DEFINED,
  VG_CME_PROTOCOL_ERROR_UNSPEC,
  VG_CME_QOS_NOT_ACCEPTED,
  VG_CME_QOS_INVALID_PARAMETER,
  VG_CME_REACTIVATION_REQUIRED,
  VG_CME_REGULAR_DEACTIVATION,
  VG_CME_SEMANTIC_ERROR_IN_TFT_OPERATION,
  VG_CME_SEMANTIC_ERRORS_IN_PACKET_FILTER,
  VG_CME_SEMANTICALLY_INCORRECT_MSG,
  VG_CME_SERVICE_TYPE_NOT_AVAILABLE,
  VG_CME_SYNTACTICAL_ERROR_IN_TFT_OPERATION,
  VG_CME_SYNTACTICAL_ERRORS_IN_PACKET_FILTER,
  VG_CME_TOO_MANY_RXJS,
  VG_CME_UNKNOWN_PDP_ADDR_OR_TYPE,
  VG_CME_UNKNOWN_PDP_CONTEXT,
  VG_CME_USER_AUTH_FAILED,
  VG_CME_FDN_FAILURE,
  VG_CME_RESTRICTED_APN_DESTINATION,
  VG_CME_BAD_CONTEXT_PARAMS,
  VG_CME_ALREADY_ACTIVE,
  /* address conversion errors introduced with handling ipv6 addresses */
  VG_CME_UTV6AD_MORE_THAN_ONE_DOUBLE_COLON,
  VG_CME_UTV6AD_IPV4_ADDRESS_OFF_END,
  VG_CME_UTV6AD_DOTTED_DECIMAL_OUTSIDE_IPV4,
  VG_CME_UTV6AD_IPV4_ERR_BYTE_VALUE_OVERFLOW,
  VG_CME_UTV6AD_IPV4_ERR_EMPTY_BYTE,
  VG_CME_UTV6AD_IPV4_ERR_BYTE_VALUE_TOO_LARGE,
  VG_CME_UTV6AD_BYTE_PAIR_TOO_LARGE,
  VG_CME_UTV6AD_IPV4_ADDRESS_TOO_SHORT_OR_BAD_CHARS,
  VG_CME_UTV6AD_IPV6_ADDRESS_TOO_SHORT_OR_BAD_CHARS,
  VG_CME_UTV6AD_BYTE_PAIR_VALUE_OVERFLOW,
  VG_CME_UTV6AD_LEADING_SINGLE_COLON,
  VG_CME_UTV6AD_TRAILING_SINGLE_COLON,
  VG_CME_UTV6AD_IPV4_EMBEDDED_NONFINALLY,
  VG_CME_UTV6AD_BUFFER_TOO_SMALL,
  VG_CME_UTV6AD_TRAILING_JUNK,
  VG_CME_CONTEXT_ACT_BARRED_BY_SIM,

  /* LTE Specific errors - ESM */
  VG_CME_OPERATOR_DETERMINED_BARRING,
  VG_CME_ACTIVE_REJ_BY_SERVING_GW_PDNGW,
  VG_CME_PTI_ALREADY_IN_USE,
  VG_CME_EPS_B_CONTEXT_WITHOUT_TFT_ALREADY_ACTIVATED,
  VG_CME_PTI_MISMATCH,
  VG_CME_LAST_PDN_DISCONNECTION_NOT_ALLOWED,
  VG_CME_PDN_TYPE_IPV4_ONLY_ALLOWED,
  VG_CME_PDN_TYPE_IPV6_ONLY_ALLOWED,
  VG_CME_SINGLE_ADDR_BEARERS_ONLY_ALLOWED,
  VG_CME_ESM_INFO_NOT_RECEIVED,
  VG_CME_PDN_CONNECTION_DOES_NOT_EXIST,
  VG_CME_MULTI_PDN_CONN_NOT_ALLOWED_FOR_ONE_APN,
  VG_CME_COLLISION_WITH_NW_INIT_REQ,
  VG_CME_UNSUPPORTED_QCI_VALUE,
  VG_CME_INVALID_PTI_VALUE,
  VG_CME_APN_RESTRICTION_VALUE_INCOMPAT,
  
  /* LTE Specific errors - EMM */
  VG_CME_IMSI_UNKNOWN_IN_HSS,
  VG_CME_ILLEGAL_UE,
  VG_CME_EPS_SVC_NOT_ALLOWED,
  VG_CME_EPS_AND_NON_EPS_SVC_NOT_ALLOWED,
  VG_CME_UE_ID_CANNOT_BE_DERIVED,
  VG_CME_TA_NOT_ALLOWED,
  VG_CME_ROAMING_NOT_ALLOWED_IN_TA,
  VG_CME_EPS_SVC_NOT_ALLOWED_IN_PLMN,
  VG_CME_NO_SUITABLE_CELLS_IN_TA,
  VG_CME_CS_DOMAIN_NOT_AVAILABLE,
  VG_CME_ESM_FAILURE,
  VG_CME_MAC_FAILURE,
  VG_CME_SYNCH_FAILURE,
  VG_CME_CONGESTION,
  VG_CME_UE_SEC_CAP_MISMATCH,
  VG_CME_SEC_MODE_REJ_UNSPEC,
  VG_CME_NON_AUTH_FOR_CSG,
  VG_CME_NON_EPS_AUTH_UNACCEPTABLE,
  VG_CME_CS_DOMAIN_TEMP_UNAVAIL,
  VG_CME_NO_EPS_BEARER_CONTEXT_ACT,
  VG_CME_PSD_MODE_NOT_POSSIBLE,
  VG_CME_INVALID_CONN_TYPE,
  VG_CME_NO_FREE_PSD_BEARER_IDS,
  VG_CME_NO_FREE_PTIS,
  VG_CME_UNABLE_TO_OPEN_DATA_CONN,
  VG_CME_INCORRECT_USERNAME_PASSWD,

  /* proprietary - audio/speech errors */
  /* None */

  /* proprietary - STK errors */

  VG_CME_STK_NO_MENU_AVAILABLE,
  VG_CME_STK_ALREADY_IN_USE,
  VG_CME_STK_NOT_ENABLED,
  VG_CME_SIM_MODIFIED_SS_ERROR,
  VG_CME_STK_PROFILE_NOT_UPDATED,
  VG_CME_STK_INVALID_COMMAND_ID,
  VG_CME_STK_INVALID_RESPONSE_DATA,
  /* proprietary - general errors */

  VG_CME_CSCS_MODE_NOT_SUPPORTED,
  VG_CME_CSCS_MODE_NOT_FOUND,
  VG_CME_CPOL_FORMAT_MISSING,
  VG_CME_CPOL_OPER_FORMAT_WRONG,
  VG_CME_CPOL_OPER_TOO_LONG,
  VG_CME_CPOL_SIM_FULL,
  VG_CME_CPOL_NOT_IN_CONTROL,
  VG_CME_CPOL_OPERATOR_NOT_FOUND,
  VG_CME_CPOL_ACT_MISSING,
  VG_CME_CPOL_ACT_WRONG,
  VG_CME_CSIM_LENGTH_INCORRECT,
  VG_CME_CSIM_INVALID_INPUT_STRING,
  /* added for job134856 */
  VG_CME_CRSM_3G_SIM,
  VG_CME_CRSM_PATHID_INVALID,
  VG_CME_CRSM_MISSING_PARAMETER,
  VG_CME_CRSM_INVALD_COMMAND,
  VG_CME_CRSM_INVALID_FILE_ID,
  VG_CME_CRSM_MISSING_P_PARAMETER,
  VG_CME_CRSM_INVALID_P_PARAMETER,
  VG_CME_CRSM_MISSING_CMD_DATA,
  VG_CME_CRSM_INVALID_CHARS_IN_CMD_DATA,
  VG_CME_INVALID_INPUT_VALUE,
  VG_CME_UNSUPPORTED_MODE,
  VG_CME_OPERATION_FAILED,
  VG_CME_MUX_ALREADY_RUNNING,
  VG_CME_UNABLE_TO_GET_CONTROL,
  VG_CME_SIM_NETWORK_REJECT,
  VG_CME_CALL_SETUP_IN_PROGRESS,
  VG_CME_SIM_POWERED_DOWN,
  VG_CME_SIM_FILE_NOT_PRESENT,

/* proprietary - MBMS Related errors */
  VG_CME_MBMS_SERV_ACT_FULL,
  VG_CME_MBMS_TMGI_NOT_PROVID,
  VG_CME_MBMS_CELL_NOT_SUPPORT,
  VG_CME_MBMS_NO_FREE_LSAPI,
  VG_CME_MBMS_RESOURCE_CONFLICT,
  VG_CME_MBMS_NETWORK_NORM_RELEASE,
  VG_CME_MBMS_OUT_OF_MB_COVERAGE,
  VG_CME_MBMS_NET_ABNORMAL_RELEASE,
  VG_CME_MBMS_AUTHENTICATION_REQ,
  VG_CME_MBMS_AUTH_SYNC_ERROR,
  VG_CME_MBMS_AUTH_INVALID_MAC,
  VG_CME_MBMS_MIKEY_MESSAGE_EXPIRED,
  VG_CME_MBMS_LOCAL_NORM_RELEASE,
  VG_CME_MBMS_NETWORK_SWITCH,
  VG_CME_MBMS_ABNORMAL_REL_UNSPECIFIED,

#if defined (ENABLE_AT_ENG_MODE)
  /* proprietary - Engineer Mode errors */
  VG_CME_EM_UNSPECIFIED_CAUSE,
  VG_CME_EM_BACKGROUND_SEARCH_ONLY_IN_IDLE_STATE,
  VG_CME_EM_CELL_RESEL_ONLY_IN_NON_DCH_TCH_STATE,
  VG_CME_EM_HANDOVER_ONLY_IN_DCH_TCH_STATE,
  VG_CME_EM_OCCURRED_BUT_CELL_MISMATCH,
  VG_CME_EM_CELL_LOCKED,
  VG_CME_EM_ARFCN_LOCKED,
  VG_CME_EM_NOT_OCCURRED_WHEN_TIMER_EXPIRY,
  VG_CME_EM_PLMN_MISMATCH,
  VG_CME_EM_SYSMODE_MISMATCH,
  VG_CME_EM_OPERATION_NOT_ALLOWED,
#endif

  /* proprietary - MENGINFO State errors */
  VG_CME_MENGINFO_NO_SERVICE,
  VG_CME_MENGINFO_CELL_SEARCH,
  VG_CME_MENGINFO_ERRC_DEACTIVATED,
  VG_CME_MENGINFO_CELL_RESELECTION,
  VG_CME_MENGINFO_IN_L1_TEST_MODE,
  VG_CME_MENGINFO_IN_REESTABLISHMENT_STATE,
  VG_CME_MENGINFO_PSM_STATE,
  VG_CME_MENGINFO_NO_DATA_TRANSFER_INFO_IN_IDLE_STATE,

  END_OF_CME_ERROR_CODES,

  /* (CMS) error codes */

  START_OF_CMS_ERROR_CODES,

  /* added for job132548 */
  /* 24.011 E.2 SMS errors */

  VG_CMS_ERROR_UNASSIGNED_NO,
  VG_CMS_ERROR_OPER_DETERM_BARRING,
  VG_CMS_ERROR_CALL_BARRED,
  VG_CMS_ERROR_REJECTED,
  VG_CMS_ERROR_DEST_OUT_OF_ORDER,
  VG_CMS_ERROR_UNIDENTIFIED_SUBSCRIBER,
  VG_CMS_ERROR_FACILITY_REJECTED,
  VG_CMS_ERROR_UNKNOWN_SUBSCRIBER,
  VG_CMS_ERROR_NET_OUT_OF_ORDER,
  VG_CMS_ERROR_TEMP_FAILURE,
  VG_CMS_ERROR_SWITCH_CONGESTION,
  VG_CMS_ERROR_RESOURCES_UNAV,
  VG_CMS_ERROR_REQ_FAC_NOT_SUBSCR,
  VG_CMS_ERROR_REQ_FACIL_NOT_IMPL,
  VG_CMS_ERROR_INVALID_SM_TRANSFER_REF,
  VG_CMS_ERROR_INVALID_MSG_SEMANTIC,
  VG_CMS_ERROR_MAND_IE_ERROR,
  VG_CMS_ERROR_MSG_NONEXISTENT,
  VG_CMS_ERROR_MSG_GEN_ERROR,
  VG_CMS_ERROR_IE_NONEXISTENT,
  VG_CMS_ERROR_PROTOCOL_ERROR,
  VG_CMS_ERROR_INTERWORKING,

  /* specification - SMS errors */

  VG_CMS_ERROR_ME_FAILURE,
  VG_CMS_ERROR_SMS_ME_RESERVED,
  VG_CMS_ERROR_OP_NOT_ALLOWED,
  VG_CMS_ERROR_OP_NOT_SUPPORTED,
  VG_CMS_ERROR_INVALID_PDU_MODE_PARM,
  VG_CMS_ERROR_INVALID_TEXT_MODE_PARM,
  VG_CMS_ERROR_SIM_NOT_INSERTED,
  VG_CMS_ERROR_SIM_PIN_NECESSARY,
  VG_CMS_ERROR_PH_SIM_PIN_NECESSARY,
  VG_CMS_ERROR_SIM_FAILURE,
  VG_CMS_ERROR_SIM_BUSY,
  VG_CMS_ERROR_SIM_WRONG,
  VG_CMS_ERROR_SIM_PUK_REQUIRED,
  VG_CMS_ERROR_SIM_PIN2_REQUIRED,
  VG_CMS_ERROR_SIM_PUK2_REQUIRED,
  VG_CMS_ERROR_MEMORY_FAILURE,
  VG_CMS_ERROR_INVALID_MEMORY_INDEX,
  VG_CMS_ERROR_MEMORY_FULL,
  VG_CMS_ERROR_SMSC_ADDRESS_UNKNOWN,
  VG_CMS_ERROR_NO_NETWORK,
  VG_CMS_ERROR_NETWORK_TIMEOUT,
  VG_CMS_ERROR_NO_CNMA_ACK_EXPECTED,
  VG_CMS_ERROR_UNKNOWN,

  /* proprietary - SMS errors */

  /* general SMS codes */
  VG_CMS_ERROR_SIM_NOT_READY,
  VG_CMS_UNREAD_RECORDS_ON_SIM,
  VG_CMS_CB_ERROR_UNKNOWN,
  VG_CMS_ERROR_PS_BUSY,
  VG_CMS_ERROR_SMREADY_COULDNT_READ_SMSP,
  VG_CMS_ERROR_SM_NOT_READY,
  /* error code for invalid parameters */
  VG_CMS_ERROR_INVALID_PARMETER,
  VG_CMS_ERROR_NVRAM_NOT_AVAILABLE,
  /* error codes for send SMS (PDU) */
  VG_CMS_ERROR_INVALID_PDU_HEXCHAR,
  VG_CMS_ERROR_INVALID_PDU_LENGTH,
  VG_CMS_ERROR_INVALID_PDU_MTI,
  VG_CMS_ERROR_INVALID_PDU_DIGITS_IN_ADDRESS,
  VG_CMS_ERROR_INVALID_PDU_ADDRESS,
  VG_CMS_ERROR_INVALID_PDU_INCORRECT_UDL,
  VG_CMS_ERROR_INVALID_PDU_SCA_LENGTH,
  /* error codes for send SMS (text) */
  VG_CMS_ERROR_SMSCMD_INVALID_FIRSTOCTET,
  VG_CMS_ERROR_SMSCMD_INVALID_CMDTYPE,
  VG_CMS_ERROR_SMSCMD_SRR_BIT_NOT_SET,
  VG_CMS_ERROR_SMSCMD_SRR_BIT_IS_SET,
  VG_CMS_ERROR_INVALID_UDH,
  VG_CMS_ERROR_INVALID_PDU_CHAR,

  END_OF_CMS_ERROR_CODES,

  VG_TOTAL_NUMBER_CODES
}
ResultCode_t;

typedef enum VgCommandIdTag
{
  VG_AT_NO_COMMAND,

/* General Sub-System */

  VG_AT_GN_MLTS,
  VG_AT_GN_CCLK,
  VG_AT_GN_GOI,
  VG_AT_GN_GSN,
  VG_AT_GN_CGSN,
  VG_AT_GN_HVER,
  VG_AT_GN_CIMI,
  VG_AT_GN_P,
  VG_AT_GN_I,
  VG_AT_GN_T,
  VG_AT_GN_GMR,
  VG_AT_GN_GMM,
  VG_AT_GN_GCAP,
  VG_AT_GN_CEER,
  VG_AT_GN_GMI,

#if defined (FEA_PHONEBOOK)  
  VG_AT_GN_CPBR,
  VG_AT_GN_CPBS,
  VG_AT_GN_CPBW,
  VG_AT_GN_CPBF,
  VG_AT_GN_SCPBW,
  VG_AT_GN_SCPBR,
#endif /* FEA_PHONEBOOK */

  VG_AT_GN_MSPN,
  VG_AT_GN_SPN,
  VG_AT_GN_MUNSOL,
  VG_AT_GN_MABORT,
  VG_AT_GN_MFTRCFG,

#if defined (FEA_PHONEBOOK)  
  VG_AT_GN_MUPBSYNC,
  VG_AT_GN_MUPBHKEY,
  VG_AT_GN_MUPBCFG,
  VG_AT_GN_MUPBGAS,
  VG_AT_GN_MUPBAAS,
#endif /* FEA_PHONEBOOK */

  VG_AT_GN_MROUTEMMI,
  VG_AT_GN_MFASSERT,

  VG_AT_GN_MEMUSIM,
  VG_AT_GN_MICCID,
  VG_AT_GN_MHOMENW,
  VG_AT_GN_MSPCHSC,
  VG_AT_GN_MN1DEBUG,
  VG_AT_GN_MBSC,

/* AT commands for NB-IOT project */
/* NVRAM Access */  
  VG_AT_GN_MNVMQ,
  VG_AT_GN_MNVMAUTH,
  VG_AT_GN_MNVMW,  
  VG_AT_GN_MNVMR,  
  VG_AT_GN_MNVMGET,
  VG_AT_GN_MNVMIVD,
  VG_AT_GN_MNVMRSTONE,
  VG_AT_GN_MNVMRST,
  VG_AT_GN_MNVMMDNQ,
  VG_AT_GN_MNVMMDR,
  VG_AT_GN_MNVMMDC,
  VG_AT_GN_MNVUID,
  VG_AT_GN_MOPTLOCK,
  VG_AT_GN_MNVMOTPW,
  VG_AT_GN_MNVMOTPR,
/* IDC RF Control */  
  VG_AT_GN_IDCFREQ,
  VG_AT_GN_IDCPWRBACKOFF,
  VG_AT_GN_IDCTX2GPS,
  VG_AT_GN_IDCTEST,

/* For Calibration */
  VG_AT_GN_MCALDEV,
  VG_AT_GN_MCAL,
  VG_AT_GN_MCGSN,
  VG_AT_GN_MCGHWN,
/* Common Sub-System */
  VG_AT_MM_COPS,
  VG_AT_MM_COPN,
  VG_AT_MM_CPOL,
  VG_AT_MM_CREG,
  VG_AT_MM_GATTCFG,
  VG_AT_MM_CPLS,
  VG_AT_MM_MODE,
  VG_AT_MM_SYSINFO,
  VG_AT_MM_SYSCONFIG,
  VG_AT_MM_CESQ,
  VG_AT_MM_CSQ,
  VG_AT_MM_MCELLINFO,
  VG_AT_MM_MEMPSET,
  VG_AT_MM_MEMPS,
  VG_AT_MM_MENGINFO,
#if defined (ENABLE_AT_TRACE)
  VG_AT_TRACE,
#endif
  VG_AT_MM_MNON,  
  VG_AT_MM_MOPL,
#if defined(UPGRADE_MTNET)
  VG_AT_MM_OFF,
  VG_AT_MM_RESET,
#endif
  VG_AT_MM_MEMMREEST,

  /* NB-IOT MM AT commands */
  VG_AT_MM_CEDRXS,
  VG_AT_MM_CEDRXRDP,
  VG_AT_MM_CCIOTOPT,
  VG_AT_MM_CPSMS,
  VG_AT_MM_CIPCA,
  VG_AT_MM_MBAND,
  VG_AT_MM_CSCON,
  VG_AT_MM_MFRCLLCK,
  VG_AT_MM_MBANDSL,
  VG_AT_MM_MNBIOTEVENT,
  
/* Profile Sub-System   */
  
  VG_AT_PF_ECHO,
  VG_AT_PF_LOUDNESS,
  VG_AT_PF_MONITOR,
  VG_AT_PF_QUIET,
  VG_AT_PF_VERBOSE,
  VG_AT_PF_X,
  VG_AT_PF_S0,
  VG_AT_PF_S1,
  VG_AT_PF_S2,
  VG_AT_PF_S3,
  VG_AT_PF_S4,
  VG_AT_PF_S5,
  VG_AT_PF_S6,
  VG_AT_PF_S7,
  VG_AT_PF_S8,
  VG_AT_PF_S10,
  VG_AT_PF_S12,
  VG_AT_PF_S25,
  VG_AT_PF_IFC,
  VG_AT_PF_ICF,
  VG_AT_PF_CNMI,
  VG_AT_PF_CSAS,
  VG_AT_PF_CRES,
  VG_AT_PF_CSCS,
  VG_AT_PF_IPR,
  VG_AT_PF_DS,
  VG_AT_PF_DCD,
  VG_AT_PF_DTR,
  VG_AT_PF_CME,
  VG_AT_PF_CR,
  VG_AT_PF_FCLASS,
  VG_AT_PF_DR,
  VG_AT_PF_CMGF,
  VG_AT_PF_CSDH,
  VG_AT_PF_ILRR,
  VG_AT_PF_DEFAULT,
  VG_AT_PF_VIEW,
  VG_AT_PF_WRITE,
  VG_AT_PF_CSMP,
  VG_AT_PF_CSMS,
  VG_AT_PF_Z,
  VG_AT_PF_CTZU,
  VG_AT_PF_CTZR,
  
#if defined (FEA_MT_PDN_ACT)  
  VG_AT_PF_CGAUTO,
  VG_AT_PF_MGMTPCACT,
  VG_AT_GP_CGANS,
  VG_AT_GP_MMTPDPCID,
#endif /* FEA_MT_PDN_ACT */

  VG_AT_PF_CGEREP,

#if defined (FEA_PPP)  
  VG_AT_PF_MGPPPLOG,
#endif /* FEA_PPP */

  VG_AT_PF_KFC,
  VG_AT_PF_N1,
  VG_AT_PF_S95,
  VG_AT_PF_MCEERMODE,
  VG_AT_PF_CGPIAF,
  VG_AT_PF_MCGEUNSOL,

  VG_AT_PF_MLTEGCF,
  VG_AT_PF_MLTEGCFLOCK,

/* For NB-IOT */
  VG_AT_PF_MPDI,
  VG_AT_PF_MPLMNURI,
  VG_AT_PF_MAPNURI,
  VG_AT_PF_MATWAKEUP,

/* GPRS sub-system */
  VG_AT_GP_CGSMS,
  VG_AT_GP_CGREG,
  VG_AT_GP_CGPADDR,
  VG_AT_GP_CGDCONT,
  VG_AT_GP_CGDATA,
  VG_AT_GP_MGCOUNT,
  VG_AT_GP_CGATT,
  VG_AT_GP_CGACT,
  VG_AT_GP_D,
  
#if defined (FEA_QOS_TFT)  
  VG_AT_GP_CGTFT,
  VG_AT_GP_CGCMOD,
  VG_AT_GP_CGTFTRDP,
  VG_AT_GP_CGEQOS,
  VG_AT_GP_CGEQOSRDP,
#endif  

#if defined (FEA_DEDICATED_BEARER)
  VG_AT_GP_CGDSCONT,
#endif
  VG_AT_GP_MGSINK,
  VG_AT_GP_MGTCSINK,

#if defined (FEA_PPP)  
  VG_AT_GP_MLOOPPSD,
  VG_AT_GP_MPPPCONFIG,
  VG_AT_GP_MPPPCONFIGAUTH,
#endif /* FEA_PPP */

  VG_AT_GP_MSACL,
  VG_AT_GP_MLACL,
  VG_AT_GP_MWACL,
  VG_AT_GP_MDACL,
  VG_AT_GP_CGCONTRDP,

#if defined (FEA_DEDICATED_BEARER)
  VG_AT_GP_CGSCONTRDP,
#endif

  VG_AT_GP_MCGDEFCONT,
  VG_AT_GP_CGDEL,
  VG_AT_GP_CGAUTH,
  VG_AT_GP_CEREG,
  VG_AT_GP_MDPDNP,
  VG_AT_GP_MNBIOTDT,
  VG_AT_GP_MNBIOTRAI,
  VG_AT_GP_CGAPNRC,
/* STK Sub-System */

  VG_AT_STK_MSTMS,
  VG_AT_STK_MSTEV,
  VG_AT_STK_MSTGC,
  VG_AT_STK_MSTCR,
  VG_AT_STK_MSTICREC,
  VG_AT_STK_MSTICIMG,
  VG_AT_STK_MSTPD,
  VG_AT_STK_MSTLOCK,
  VG_AT_STK_MSTMODE,

/* SMS Sub-System */

  VG_AT_SMS_CSCA,
  VG_AT_SMS_CMGS,
  VG_AT_SMS_CMGL,
  VG_AT_SMS_CMGW,
  VG_AT_SMS_CMGD,
  VG_AT_SMS_CMSS,
  VG_AT_SMS_CMGR,
  VG_AT_SMS_MCMGR,
  VG_AT_SMS_CMGC,
  VG_AT_SMS_CPMS,
  VG_AT_SMS_CNMA,
  VG_AT_SMS_CMMS,
  VG_AT_SMS_MSMSTATUS,
  VG_AT_SMS_MMGRW,
  VG_AT_SMS_MMGSC,
  VG_AT_SMS_MSMEXTRAINFO,
  VG_AT_SMS_MSMEXTRAUNSOL,
  
#if defined (FEA_PHONEBOOK)  
  VG_AT_SMS_MSMALPHAID,
#endif /* FEA_PHONEBOOK */

  VG_AT_SMS_MMGI,
/* Test Sub-System */

/* Call Control Sub-System */
#if defined (FEA_MT_PDN_ACT)
  VG_AT_CC_A,
#endif /* FEA_MT_PDN_ACT */
        
  VG_AT_CC_DL,
  VG_AT_CC_D,
  VG_AT_CC_H,
  VG_AT_CC_O,

/* Mux Sub-System */

  VG_AT_CMUX,
  VG_AT_MMUX,
  VG_AT_SS_CPWD,
  VG_AT_SS_CLCK,

/* Sim lock Sub-System.... */
  VG_AT_SL_CPIN,
  VG_AT_SL_CFUN,
  VG_AT_SL_MSIMINS,
  VG_AT_SL_CSIM,
  VG_AT_SL_CRSM,
  VG_AT_SL_MSST,
  VG_AT_SL_MGID,
  VG_AT_SL_CMAR,
  VG_AT_SL_MUPIN,
  VG_AT_SL_MUAPP,
  VG_AT_SL_CARDMODE,
#if defined (ENABLE_DUAL_SIM_SOLUTION)
  VG_AT_SL_MSIMHSEL,
  VG_AT_SL_CSUS,
#endif /* ENABLE_DUAL_SIM_SOLUTION */
#if defined (SIM_EMULATION_ON)
  VG_AT_SL_MUSIMEMUW,
#endif /* SIM_EMULATION_ON */
  VG_AT_SL_CPINR,
  VG_AT_SL_MCSIMLOCK,
  VG_AT_GN_CNUM,
  VG_AT_GN_CCHO,
  VG_AT_GN_CCHC,
  VG_AT_GN_CGLA,
  VG_AT_GN_CRLA,
  
/************************************************************/
/* All customer AT commmands must be added after this point */
/************************************************************/

/* Custom Sub-System */

  VG_AT_CT_MTK,

/* Customer AT commands */
  VG_AT_CUSTOMER_1,
  VG_AT_CUSTOMER_2,
  VG_AT_CUSTOMER_3,
  VG_AT_CUSTOMER_4,
  VG_AT_CUSTOMER_5,
#ifdef ENABLE_AP_BRIDGE_FEATURE
  /* AP Bridge Sub-System reserved command IDs.
  ** Please don't add any command ID between
  ** VG_AT_AP_BRIDGE_BASE and VG_AT_AP_BRIDGE_END.
  */
    VG_AT_AP_BRIDGE_BASE,
    VG_AT_AP_BRIDGE_END = VG_AT_AP_BRIDGE_BASE + AP_BRIDGE_MAX_AT_CMD_COUNT,
#endif/*ENABLE_AP_BRIDGE_FEATURE*/
/* Last code - deliberately chosen to be bigger than any possible value */

  VG_AT_LAST_CODE = 65535

} CommandId_t;

typedef struct CrOutputStreamCtrlTag
{
  SignalBuffer  signal;
} CrOutputStreamCtrl_t;

typedef enum VgGnMcalResponseResultTag
{
  VG_GN_MCAL_RESULT_SUCCESS = 0,
  VG_GN_MCAL_RESULT_NOT_SUPPORT,
  VG_GN_MCAL_RESULT_FAILED,
  VG_GN_MCAL_RESULT_INVALID
} VgGnMcalResponseResult;
/***************************************************************************
 *  Macros
 **************************************************************************/

/***************************************************************************
 *  Function Prototypes
 **************************************************************************/

#endif  /* RVCRDATA_H */

/* END OF FILE */


